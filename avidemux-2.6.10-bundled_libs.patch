diff --git a/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/ADM_ad_a52.cpp b/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/ADM_ad_a52.cpp
index 6eddc3a..539405a 100644
--- a/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/ADM_ad_a52.cpp
+++ b/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/ADM_ad_a52.cpp
@@ -18,8 +18,8 @@
 #include "ADM_ad_plugin.h"
 
 extern "C" {
-#include "ADM_liba52/a52.h"
-#include "ADM_liba52/mm_accel.h"
+#include "a52dec/a52.h"
+#include "a52dec/mm_accel.h"
 };
 
 #define AC3_HANDLE ((a52_state_t *)ac3_handle)
diff --git a/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/CMakeLists.txt b/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/CMakeLists.txt
index 04fbdc6..f769ded 100644
--- a/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/CMakeLists.txt
+++ b/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/CMakeLists.txt
@@ -1,11 +1,18 @@
 INCLUDE(ad_plugin)
 
-ADD_SUBDIRECTORY(ADM_liba52)
+IF(NOT USE_EXTERNAL_LIBA52)
+    ADD_SUBDIRECTORY(ADM_liba52)
+ENDIF()
 
 SET(ADM_ad_a52_SRCS ADM_ad_a52.cpp)
 
 ADD_AUDIO_DECODER( ADM_ad_a52  ${ADM_ad_a52_SRCS})
-TARGET_LINK_LIBRARIES(ADM_ad_a52 ADM_liba52)
+
+IF(USE_EXTERNAL_LIBA52)
+    TARGET_LINK_LIBRARIES(ADM_ad_a52 ${LIBA52_LIBRARIES})
+ELSE()
+    TARGET_LINK_LIBRARIES(ADM_ad_a52 ADM_liba52)
+ENDIF()
 
 INIT_AUDIO_PLUGIN(ADM_ad_a52)
 INSTALL_AUDIODECODER(ADM_ad_a52)
diff --git a/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/ADM_ad_mad.cpp b/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/ADM_ad_mad.cpp
index 171b413..5bddd56 100644
--- a/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/ADM_ad_mad.cpp
+++ b/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/ADM_ad_mad.cpp
@@ -16,7 +16,7 @@
  ***************************************************************************/
 #include "ADM_default.h"
 #include "ADM_ad_plugin.h"
-#include "ADM_libMad/mad.h"
+#include "mad.h"
 
 #define Stream ((mad_stream *)_stream)
 #define Frame ((mad_frame *)_frame)
diff --git a/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/CMakeLists.txt b/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/CMakeLists.txt
index e7e91e8..fa9ec90 100644
--- a/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/CMakeLists.txt
+++ b/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/CMakeLists.txt
@@ -10,13 +10,20 @@ ELSEIF (ADM_CPU_ARMEL)
 	ADD_DEFINITIONS("-DFPM_ARM")
 ENDIF (ADM_CPU_X86_32)
 
-ADD_SUBDIRECTORY(ADM_libMad)
+IF(NOT USE_EXTERNAL_LIBMAD)
+    ADD_SUBDIRECTORY(ADM_libMad)
+ENDIF()
 
 ADD_DEFINITIONS("-DHAVE_ASSERT_H")
 SET(ADM_ad_Mad_SRCS ADM_ad_mad.cpp)
 
 ADD_AUDIO_DECODER( ADM_ad_Mad ${ADM_ad_Mad_SRCS})
-TARGET_LINK_LIBRARIES(ADM_ad_Mad ADM_libMad)
+
+IF(USE_EXTERNAL_LIBMAD)
+    TARGET_LINK_LIBRARIES(ADM_ad_Mad ${LIBMAD_LIBRARIES})
+ELSE()
+    TARGET_LINK_LIBRARIES(ADM_ad_Mad ADM_libMad)
+ENDIF()
 
 INIT_AUDIO_PLUGIN(ADM_ad_Mad)
 INSTALL_AUDIODECODER(ADM_ad_Mad)
diff --git a/avidemux_plugins/ADM_videoFilters6/ass/ADM_vidASS.cpp b/avidemux_plugins/ADM_videoFilters6/ass/ADM_vidASS.cpp
index baadf0c..9ad93cd 100644
--- a/avidemux_plugins/ADM_videoFilters6/ass/ADM_vidASS.cpp
+++ b/avidemux_plugins/ADM_videoFilters6/ass/ADM_vidASS.cpp
@@ -24,7 +24,7 @@
 #include "prefs.h"
 extern "C"
 {
-#include "ADM_libass/ass.h"
+#include "ass/ass.h"
 }
 
 /**
diff --git a/avidemux_plugins/ADM_videoFilters6/ass/CMakeLists.txt b/avidemux_plugins/ADM_videoFilters6/ass/CMakeLists.txt
index f793fe0..d49efc4 100644
--- a/avidemux_plugins/ADM_videoFilters6/ass/CMakeLists.txt
+++ b/avidemux_plugins/ADM_videoFilters6/ass/CMakeLists.txt
@@ -5,7 +5,6 @@ checkFreeType()
 checkFridibi("0.19")
 
 IF (USE_FREETYPE AND USE_FRIDIBI)
-	ADD_SUBDIRECTORY(ADM_libass)
 
 	INCLUDE(vf_plugin)
 	SET(ADM_vf_ssa_SRCS ADM_vidASS.cpp)
@@ -13,7 +12,15 @@ IF (USE_FREETYPE AND USE_FRIDIBI)
 	ADD_VIDEO_FILTER(ADM_vf_ssa ${ADM_vf_ssa_SRCS})
 
 	IF(DO_COMMON)
-		TARGET_LINK_LIBRARIES(ADM_vf_ssa ADM_libass ${FREETYPE2_LDFLAGS} ${FRIDIBI_LDFLAGS} ADM_coreSubtitle)
+#		TARGET_LINK_LIBRARIES(ADM_vf_ssa ADM_libass ${FREETYPE2_LDFLAGS} ${FRIDIBI_LDFLAGS} ADM_coreSubtitle)
+               IF(USE_EXTERNAL_LIBASS)
+                       TARGET_LINK_LIBRARIES(ADM_vf_ssa ${LIBASS_LIBRARIES}
+                               ${FREETYPE2_LDFLAGS} ADM_coreSubtitle)
+               ELSE(USE_EXTERNAL_LIBASS)
+                       ADD_SUBDIRECTORY(ADM_libass)
+                       TARGET_LINK_LIBRARIES(ADM_vf_ssa ADM_libass
+                               ${FREETYPE2_LDFLAGS} ADM_coreSubtitle)
+               ENDIF(USE_EXTERNAL_LIBASS)
                 # We force the use of fontconfig
                 ADD_DEFINITIONS("-DUSE_FONTCONFIG")
                 TARGET_LINK_LIBRARIES(ADM_vf_ssa ${FONTCONFIG_LDFLAGS})
diff --git a/avidemux_plugins/CMakeLists.txt b/avidemux_plugins/CMakeLists.txt
index 0333abd..0a57523 100644
--- a/avidemux_plugins/CMakeLists.txt
+++ b/avidemux_plugins/CMakeLists.txt
@@ -64,6 +64,40 @@ include(admCoreIncludes)
 LINK_DIRECTORIES("${AVIDEMUX_SEARCH_LIB_DIR}")
 INCLUDE_DIRECTORIES("${AVIDEMUX_SEARCH_INCLUDE_DIR}/avidemux/2.6")
 
+#########################################
+# Unbundle some libraries here
+#########################################
+OPTION(USE_EXTERNAL_LIBASS "Use system installed libass library." OFF)
+OPTION(USE_EXTERNAL_LIBMAD "Use system installed libmad library." OFF)
+OPTION(USE_EXTERNAL_LIBA52 "Use system installed liba52 library." OFF)
+OPTION(USE_EXTERNAL_LIBTWOLAME "Use system installed libtwolame library." OFF)
+
+INCLUDE(FindPkgConfig)
+
+# libass
+IF(USE_EXTERNAL_LIBASS)
+        PKG_CHECK_MODULES(LIBASS REQUIRED libass)
+        INCLUDE_DIRECTORIES(SYSTEM ${LIBASS_INCLUDE_DIRS})
+ENDIF()
+
+# libmad
+IF(USE_EXTERNAL_LIBMAD)
+        PKG_CHECK_MODULES(LIBMAD REQUIRED mad)
+        INCLUDE_DIRECTORIES(SYSTEM ${LIBMAD_INCLUDE_DIRS})
+ENDIF()
+
+# liba52
+IF(USE_EXTERNAL_LIBA52)
+        FIND_PATH(LIBA52_INCLUDE_DIR a52dec/a52.h)
+        FIND_LIBRARY(LIBA52_LIBRARIES a52)
+        INCLUDE_DIRECTORIES(SYSTEM ${LIBA52_INCLUDE_DIR})
+ENDIF()
+
+# twolame
+IF(USE_EXTERNAL_TWOLAME)
+        PKG_CHECK_MODULES(LIBTWOLAME REQUIRED twolame)
+        INCLUDE_DIRECTORIES(SYSTEM ${LIBTWOLAME_INCLUDE_DIRS})
+ENDIF()
 
 IF (FRESH_BUILD)
 	MESSAGE("")
